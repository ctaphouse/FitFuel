@page "/itemtypes/create"
@using FitFuel.Shared.Dtos
@using FitFuel.Client.Services
@inject ItemTypeService ItemTypeService
@inject NavigationManager NavigationManager
@inject IDialogService DialogService

<PageTitle>Create Item Type</PageTitle>

<div class="min-h-screen bg-gray-100 py-8">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center mb-6">
            <h1 class="text-2xl font-bold text-indigo-800">Create Item Type</h1>
            <a href="/itemtypes" 
               class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-700 hover:bg-indigo-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                Back to List
            </a>
        </div>
        
        <div class="bg-white shadow-lg rounded-lg overflow-hidden border border-gray-200">
            <div class="p-6">
                <EditForm Model="@_itemType" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary class="mb-4 text-red-600 text-sm" />
                    
                    <div class="space-y-6 bg-slate-200 p-6 rounded-md">
                        <div class="max-w-md">
                            <label for="name" class="block text-sm font-medium text-gray-800">Name</label>
                            <div class="mt-1">
                                <InputText id="name" @bind-Value="_itemType.Name" maxlength="50"
                                         class="shadow-sm focus:ring-indigo-600 focus:border-indigo-600 block w-full sm:text-sm border-gray-300 rounded-md bg-white text-gray-900" />
                                <ValidationMessage For="@(() => _itemType.Name)" class="mt-1 text-sm text-red-600" />
                            </div>
                        </div>
                        
                        <div class="pt-5 flex justify-end space-x-3">
                            <button type="button" @onclick="Cancel"
                                    class="inline-flex justify-center py-2 px-4 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                Cancel
                            </button>
                            <button type="submit" 
                                    class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                                Save
                            </button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private ItemTypeDto _itemType = new ItemTypeDto();    
    private async Task HandleValidSubmit()
    {       
        try
        {
            var success = await ItemTypeService.CreateItemTypeAsync(_itemType);
            if (success)
            {
                await DialogService.ShowMessageBox("Success", "Item type created successfully.");
                NavigationManager.NavigateTo("/itemtypes");
            }
            else
            {
                await DialogService.ShowMessageBox("Error", "Failed to create item type.");
            }
        }
        catch (Exception ex)
        {
            await DialogService.ShowMessageBox("Error", $"Error creating item type: {ex.Message}");
        }
    }
    
    private void Cancel()
    {
        NavigationManager.NavigateTo("/itemtypes");
    }
}